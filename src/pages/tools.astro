---
import '../styles/global.css';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Tools – SEOScribe</title>
    <meta name="robots" content="index,follow" />
  </head>
  <body class="grid-bg">
    <div class="w-full bg-white/5 border-b border-white/10">
      <div class="max-w-[1280px] mx-auto px-6 py-3 flex items-center justify-between">
        <a href="/" class="font-black">SEOScribe</a>
        <div class="text-white/70">Free: 1 use/tool/day · Pro: 10</div>
      </div>
    </div>

    <div class="max-w-[1200px] mx-auto p-6">
      <h1 class="text-3xl font-black mb-6">SEO & Writing Tools</h1>
      <div class="grid md:grid-cols-2 gap-4">
        <div class="glass p-4 rounded-xl">
          <h2 class="font-extrabold mb-1">Headline Analyzer</h2>
          <p class="text-white/60 mb-2">Evaluate the strength and click-through potential of your headline.</p>
          <input id="headlineInput" class="input-field mb-2" placeholder="Enter headline..." />
          <button class="btn-primary mb-2" onclick="window.SEOScribeTools?.runHeadline()">Analyze</button>
          <div class="text-white/50 text-xs" id="headlineLimit"></div>
          <div id="headlineResult"></div>
        </div>

        <div class="glass p-4 rounded-xl">
          <h2 class="font-extrabold mb-1">Readability</h2>
          <p class="text-white/60 mb-2">Measure reading level using Flesch formulas.</p>
          <textarea id="readabilityInput" class="input-field mb-2" rows="4" placeholder="Paste or type your text here..."></textarea>
          <button class="btn-primary mb-2" onclick="window.SEOScribeTools?.runReadability()">Analyze</button>
          <div class="text-white/50 text-xs" id="readabilityLimit"></div>
          <div id="readabilityResult"></div>
        </div>
      </div>
    </div>

    <!-- Tiny client that enforces 1 use/tool/day and hits your API -->
    <script type="module">
      const API = 'https://seoscribe.frank-couchman.workers.dev';
      const today = new Date().toISOString().slice(0,10);
      const token = localStorage.getItem('authToken');
      const email = localStorage.getItem('userEmail') || null;
      const perToolLimit = 1; // free default
      const pro = localStorage.getItem('plan') === 'pro';
      const limit = pro ? 10 : 1;

      function key(id){ return `tool-${id}:${today}:${email?('acct:'+email):'guest'}`; }
      function get(id){ return parseInt(localStorage.getItem(key(id))||'0',10); }
      function inc(id){ const n=get(id)+1; localStorage.setItem(key(id), String(n)); return n; }
      function left(id){ return Math.max(0, limit - get(id)); }
      function setLimitText(id, elId){
        const el = document.getElementById(elId);
        if(el) el.textContent = `Uses left today: ${left(id)} of ${limit}`;
      }
      async function call(path, payload){
        const res = await fetch(API+path, {
          method:'POST', mode:'cors',
          headers:{ 'Content-Type':'application/json', ...(token?{Authorization:`Bearer ${token}`}:{}) },
          body: JSON.stringify(payload)
        });
        if(!res.ok) throw new Error((await res.json().catch(()=>({}))).message || 'Failed');
        return res.json();
      }

      window.SEOScribeTools = {
        async runHeadline(){
          if(left('headline')<=0) return alert('Daily limit reached for this tool. Reset at midnight.');
          const v = (document.getElementById('headlineInput') as HTMLInputElement).value.trim();
          if(!v) return alert('Enter a headline');
          const out = await call('/api/tools/headline-analyzer', { headline: v });
          inc('headline'); setLimitText('headline','headlineLimit');
          document.getElementById('headlineResult').innerHTML = `
            <div class="mt-2">
              <p class="text-white/80 mb-1"><strong>Score:</strong> ${out.score}</p>
              <p class="text-white/80 mb-1"><strong>Length:</strong> ${out.length} chars / ${out.word_count} words</p>
              <p class="text-white/80 mb-1"><strong>Grade:</strong> ${out.grade} (${out.estimated_ctr} CTR)</p>
            </div>`;
        },
        async runReadability(){
          if(left('readability')<=0) return alert('Daily limit reached for this tool. Reset at midnight.');
          const v = (document.getElementById('readabilityInput') as HTMLTextAreaElement).value.trim();
          if(!v) return alert('Enter text first');
          const out = await call('/api/tools/readability', { text: v });
          inc('readability'); setLimitText('readability','readabilityLimit');
          document.getElementById('readabilityResult').innerHTML = `
            <div class="mt-2">
              <p class="text-white/80 mb-1"><strong>Flesch-Kincaid:</strong> ${out.fk_grade}</p>
              <p class="text-white/80 mb-1"><strong>Reading ease:</strong> ${out.flesch_ease}</p>
            </div>`;
        }
      };

      setLimitText('headline','headlineLimit');
      setLimitText('readability','readabilityLimit');
    </script>
  </body>
</html>
